/**
 * Given an optional global context, returns a proxy that resolves
 * all tag names into their global constructors.
 * @property {globalThis} [self=globalThis]
 * @returns {HTML}
 */
declare function _default({ document }?: typeof globalThis): HTML;
export default _default;
export type HTML = {
    A: new () => HTMLAnchorElement;
    Abbr: new () => HTMLElement;
    Acronym: new () => HTMLElement;
    Address: new () => HTMLElement;
    Applet: new () => HTMLUnknownElement;
    Area: new () => HTMLAreaElement;
    Article: new () => HTMLElement;
    Aside: new () => HTMLElement;
    Audio: new () => HTMLAudioElement;
    B: new () => HTMLElement;
    Base: new () => HTMLBaseElement;
    Bdi: new () => HTMLElement;
    Bdo: new () => HTMLElement;
    BGSound: new () => HTMLUnknownElement;
    Big: new () => HTMLElement;
    Blink: new () => HTMLUnknownElement;
    BlockQuote: new () => HTMLQuoteElement;
    Body: new () => HTMLBodyElement;
    BR: new () => HTMLBRElement;
    Button: new () => HTMLButtonElement;
    Canvas: new () => HTMLCanvasElement;
    Caption: new () => HTMLTableCaptionElement;
    Center: new () => HTMLElement;
    Cite: new () => HTMLElement;
    Code: new () => HTMLElement;
    Col: new () => HTMLTableColElement;
    ColGroup: new () => HTMLTableColElement;
    Content: new () => HTMLUnknownElement;
    Data: new () => HTMLDataElement;
    DataList: new () => HTMLDataListElement;
    DD: new () => HTMLElement;
    Del: new () => HTMLModElement;
    Details: new () => HTMLDetailsElement;
    Dfn: new () => HTMLElement;
    Dialog: new () => HTMLDialogElement;
    Dir: new () => HTMLDirectoryElement;
    Div: new () => HTMLDivElement;
    DL: new () => HTMLDListElement;
    DT: new () => HTMLElement;
    Element: new () => HTMLElement;
    Em: new () => HTMLElement;
    Embed: new () => HTMLEmbedElement;
    FieldSet: new () => HTMLFieldSetElement;
    FigCaption: new () => HTMLElement;
    Figure: new () => HTMLElement;
    Font: new () => HTMLFontElement;
    Footer: new () => HTMLElement;
    Form: new () => HTMLFormElement;
    Frame: new () => HTMLFrameElement;
    FrameSet: new () => HTMLFrameSetElement;
    H1: new () => HTMLHeadingElement;
    H2: new () => HTMLHeadingElement;
    H3: new () => HTMLHeadingElement;
    H4: new () => HTMLHeadingElement;
    H5: new () => HTMLHeadingElement;
    H6: new () => HTMLHeadingElement;
    Head: new () => HTMLHeadElement;
    Header: new () => HTMLElement;
    HR: new () => HTMLHRElement;
    Html: new () => HTMLHtmlElement;
    I: new () => HTMLElement;
    IFrame: new () => HTMLIFrameElement;
    Image: new () => HTMLUnknownElement;
    Img: new () => HTMLImageElement;
    Input: new () => HTMLInputElement;
    Ins: new () => HTMLModElement;
    Kbd: new () => HTMLElement;
    Keygen: new () => HTMLUnknownElement;
    Label: new () => HTMLLabelElement;
    Legend: new () => HTMLLegendElement;
    LI: new () => HTMLLIElement;
    Link: new () => HTMLLinkElement;
    Main: new () => HTMLElement;
    Map: new () => HTMLMapElement;
    Mark: new () => HTMLElement;
    Marquee: new () => HTMLMarqueeElement;
    Menu: new () => HTMLMenuElement;
    MenuItem: new () => HTMLUnknownElement;
    Meta: new () => HTMLMetaElement;
    Meter: new () => HTMLMeterElement;
    Nav: new () => HTMLElement;
    NoBR: new () => HTMLElement;
    NoEmbed: new () => HTMLElement;
    NoFrames: new () => HTMLElement;
    NoScript: new () => HTMLElement;
    Object: new () => HTMLObjectElement;
    OL: new () => HTMLOListElement;
    OptGroup: new () => HTMLOptGroupElement;
    Option: new () => HTMLOptionElement;
    Output: new () => HTMLOutputElement;
    P: new () => HTMLParagraphElement;
    Param: new () => HTMLParamElement;
    Picture: new () => HTMLPictureElement;
    PlainText: new () => HTMLElement;
    Portal: new () => HTMLUnknownElement;
    Pre: new () => HTMLPreElement;
    Progress: new () => HTMLProgressElement;
    Q: new () => HTMLQuoteElement;
    RB: new () => HTMLElement;
    RP: new () => HTMLElement;
    RT: new () => HTMLElement;
    RTC: new () => HTMLElement;
    Ruby: new () => HTMLElement;
    S: new () => HTMLElement;
    Samp: new () => HTMLElement;
    Script: new () => HTMLScriptElement;
    Section: new () => HTMLElement;
    Select: new () => HTMLSelectElement;
    Shadow: new () => HTMLUnknownElement;
    Slot: new () => HTMLSlotElement;
    Small: new () => HTMLElement;
    Source: new () => HTMLSourceElement;
    Spacer: new () => HTMLUnknownElement;
    Span: new () => HTMLSpanElement;
    Strike: new () => HTMLElement;
    Strong: new () => HTMLElement;
    Style: new () => HTMLStyleElement;
    Sub: new () => HTMLElement;
    Summary: new () => HTMLElement;
    Sup: new () => HTMLElement;
    Table: new () => HTMLTableElement;
    TBody: new () => HTMLTableSectionElement;
    TD: new () => HTMLTableCellElement;
    Template: new () => HTMLTemplateElement;
    TextArea: new () => HTMLTextAreaElement;
    TFoot: new () => HTMLTableSectionElement;
    TH: new () => HTMLTableCellElement;
    THead: new () => HTMLTableSectionElement;
    Time: new () => HTMLTimeElement;
    Title: new () => HTMLTitleElement;
    TR: new () => HTMLTableRowElement;
    Track: new () => HTMLTrackElement;
    TT: new () => HTMLElement;
    U: new () => HTMLElement;
    UL: new () => HTMLUListElement;
    Var: new () => HTMLElement;
    Video: new () => HTMLVideoElement;
    Wbr: new () => HTMLElement;
    XMP: new () => HTMLPreElement;
};
