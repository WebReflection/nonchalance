{
  "name": "nonchalance",
  "version": "0.1.15",
  "description": "The easiest way to augment DOM builtin elements",
  "main": "./cjs/index.js",
  "types": "./types/index.d.ts",
  "typesVersions": {
    ">=4.9": {
      "*": [
        "types/*"
      ]
    }
  },
  "scripts": {
    "build": "npm run build:all && npm run build:types && npm run cjs && npm run rollup && npm run types && npm run test && npm run size:all && npm run size:es && npm run size:runtime && npm run size:ce",
    "build:all": "cat esm/index.js | sed 's/proxied-html-constructors/proxied-html-constructors\\/all/' > esm/all.js",
    "build:types": "node rollup/types.cjs",
    "cjs": "ascjs --no-default esm cjs",
    "rollup": "rollup --config rollup/es.config.js && rollup --config rollup/runtime.config.js && rollup --config rollup/all.config.js && rollup --config rollup/ce.config.js",
    "test": "c8 node test/index.js",
    "coverage": "mkdir -p ./coverage; c8 report --reporter=text-lcov > ./coverage/lcov.info",
    "size:all": "echo -e \"\\x1b[1mall.js\\x1b[0m brotli $(cat all.js | brotli | wc -c)\";echo -e \"\\x1b[1mall.js\\x1b[0m gzip $(cat all.js | gzip | wc -c)\"",
    "size:es": "echo -e \"\\x1b[1mes.js\\x1b[0m brotli $(cat es.js | brotli | wc -c)\";echo -e \"\\x1b[1mes.js\\x1b[0m gzip $(cat es.js | gzip | wc -c)\"",
    "size:runtime": "echo -e \"\\x1b[1mruntime.js\\x1b[0m brotli $(cat runtime.js | brotli | wc -c)\";echo -e \"\\x1b[1mruntime.js\\x1b[0m gzip $(cat runtime.js | gzip | wc -c)\"",
    "size:ce": "echo -e \"\\x1b[1mce.js\\x1b[0m brotli $(cat ce.js | brotli | wc -c)\";echo -e \"\\x1b[1mce.js\\x1b[0m gzip $(cat ce.js | gzip | wc -c)\"",
    "types": "tsc -p . && node rollup/fix-ts.cjs && node rollup/ce.cjs"
  },
  "keywords": [
    "DOM",
    "builtin",
    "extend"
  ],
  "author": "Andrea Giammarchi",
  "license": "ISC",
  "devDependencies": {
    "@rollup/plugin-node-resolve": "^15.0.1",
    "@rollup/plugin-terser": "^0.4.0",
    "ascjs": "^5.0.1",
    "c8": "^7.12.0",
    "rollup": "^3.15.0",
    "typescript": "^4.9.5"
  },
  "module": "./esm/index.js",
  "type": "module",
  "exports": {
    ".": {
      "types": "./types/index.d.ts",
      "import": "./esm/index.js",
      "default": "./cjs/index.js"
    },
    "./accessors": {
      "types": "./types/accessors.d.ts",
      "import": "./esm/accessors.js",
      "default": "./cjs/accessors.js"
    },
    "./all": {
      "types": "./types/all.d.ts",
      "import": "./esm/all.js",
      "default": "./cjs/all.js"
    },
    "./ce": {
      "types": "./types/ce.d.ts",
      "import": "./esm/ce.js",
      "default": "./cjs/ce.js"
    },
    "./runtime": {
      "types": "./types/runtime.d.ts",
      "import": "./esm/runtime.js",
      "default": "./cjs/runtime.js"
    },
    "./ref": {
      "types": "./types/ref.d.ts",
      "import": "./esm/ref.js",
      "default": "./cjs/ref.js"
    },
    "./package.json": "./package.json"
  },
  "unpkg": "es.js",
  "dependencies": {
    "custom-function": "^1.0.2",
    "element-notifier": "^1.1.2",
    "proxied-html-constructors": "^0.1.4"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WebReflection/nonchalance.git"
  },
  "bugs": {
    "url": "https://github.com/WebReflection/nonchalance/issues"
  },
  "homepage": "https://github.com/WebReflection/nonchalance#readme"
}
