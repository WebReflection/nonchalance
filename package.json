{
  "name": "nonchalance",
  "version": "0.3.5",
  "description": "The easiest way to augment DOM builtin elements",
  "main": "./cjs/core.js",
  "types": "./types/core.d.ts",
  "typesVersions": {
    ">=4.9": {
      "*": [
        "types/*"
      ]
    }
  },
  "scripts": {
    "build": "npm run cjs && npm run rollup && npm run types && npm run test && npm run size:ce && npm run size:core && node rollup/core.cjs && npm run size:jsx && npm run size:builtin && npm run size:tag",
    "cjs": "ascjs --no-default esm cjs",
    "rollup": "rollup --config rollup/ce.config.js && rollup --config rollup/core.config.js && rollup --config rollup/tag.config.js && rollup --config rollup/jsx.config.js && rollup --config rollup/builtin.config.js",
    "test": "c8 node test/index.js",
    "coverage": "mkdir -p ./coverage; c8 report --reporter=text-lcov > ./coverage/lcov.info",
    "size:builtin": "echo -e \"\\x1b[1mbuiltin.js\\x1b[0m brotli $(cat builtin.js | brotli | wc -c)\";echo -e \"\\x1b[1mbuiltin.js\\x1b[0m gzip $(cat builtin.js | gzip | wc -c)\"",
    "size:ce": "echo -e \"\\x1b[1mce.js\\x1b[0m brotli $(cat ce.js | brotli | wc -c)\";echo -e \"\\x1b[1mce.js\\x1b[0m gzip $(cat ce.js | gzip | wc -c)\"",
    "size:core": "echo -e \"\\x1b[1mcore.js\\x1b[0m brotli $(cat core.js | brotli | wc -c)\";echo -e \"\\x1b[1mcore.js\\x1b[0m gzip $(cat core.js | gzip | wc -c)\"",
    "size:jsx": "echo -e \"\\x1b[1mjsx.js\\x1b[0m brotli $(cat jsx.js | brotli | wc -c)\";echo -e \"\\x1b[1mjsx.js\\x1b[0m gzip $(cat jsx.js | gzip | wc -c)\"",
    "size:tag": "echo -e \"\\x1b[1mtag.js\\x1b[0m brotli $(cat tag.js | brotli | wc -c)\";echo -e \"\\x1b[1mtag.js\\x1b[0m gzip $(cat tag.js | gzip | wc -c)\"",
    "types": "tsc -p . && node rollup/fix-ts.cjs && node rollup/ce.cjs"
  },
  "keywords": [
    "DOM",
    "builtin",
    "extend"
  ],
  "author": "Andrea Giammarchi",
  "license": "ISC",
  "devDependencies": {
    "@rollup/plugin-node-resolve": "^15.0.1",
    "@rollup/plugin-terser": "^0.4.0",
    "ascjs": "^5.0.1",
    "c8": "^7.13.0",
    "rollup": "^3.17.3",
    "typescript": "^4.9.5"
  },
  "module": "./esm/core.js",
  "type": "module",
  "exports": {
    ".": {
      "types": "./types/core.d.ts",
      "import": "./esm/core.js",
      "default": "./cjs/core.js"
    },
    "./accessors": {
      "types": "./types/accessors.d.ts",
      "import": "./esm/accessors.js",
      "default": "./cjs/accessors.js"
    },
    "./builtin": {
      "types": "./types/builtin.d.ts",
      "import": "./esm/builtin.js",
      "default": "./cjs/builtin.js"
    },
    "./ce": {
      "types": "./types/ce.d.ts",
      "import": "./esm/ce.js",
      "default": "./cjs/ce.js"
    },
    "./core": {
      "types": "./types/core.d.ts",
      "import": "./esm/core.js",
      "default": "./cjs/core.js"
    },
    "./dummy": {
      "types": "./types/dummy.d.ts",
      "import": "./esm/dummy.js",
      "default": "./cjs/dummy.js"
    },
    "./jsx": {
      "types": "./types/jsx.d.ts",
      "import": "./esm/jsx.js",
      "default": "./cjs/jsx.js"
    },
    "./ref": {
      "types": "./types/ref.d.ts",
      "import": "./esm/ref.js",
      "default": "./cjs/ref.js"
    },
    "./tag": {
      "types": "./types/tag.d.ts",
      "import": "./esm/tag.js",
      "default": "./cjs/tag.js"
    },
    "./package.json": "./package.json"
  },
  "unpkg": "core.js",
  "dependencies": {
    "custom-function": "^1.0.6"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WebReflection/nonchalance.git"
  },
  "bugs": {
    "url": "https://github.com/WebReflection/nonchalance/issues"
  },
  "homepage": "https://github.com/WebReflection/nonchalance#readme"
}
